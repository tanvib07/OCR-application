# -*- coding: utf-8 -*-
"""ResoluteAI.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wJs1UpKyPB9tI6lojuWGFOTNXsyDgtAn
"""

import pickle
pickle.dump([reader],open('resoluteAI.pkl','wb'))
model = pickle.load(open('resoluteAI.pkl', 'rb'))

!apt-get install poppler-utils

!pip install pdf2image
!pip install easyocr

from pdf2image import convert_from_path, convert_from_bytes
import easyocr
import numpy as np
import PIL
from PIL import ImageDraw

reader = easyocr.Reader(['en']) #the language being used while reading is english

#@title Inputs
#@markdown Enter the magazine document to be extracted
Document_name = "Yoga.pdf" #@param{type:"string"}
pdf = Document_name
#@markdown Enter the page number you want to extract
Page_number =  1#@param{type:"number"}
p = Page_number

print(pdf)
print(p)

#@title Run to convert pdf page to image and display it.

images = convert_from_path(pdf)
from IPython.display import display, Image
page = int(p)-1
image = images[page].resize((700,900))
display(image)

#@title Run to get the co-ordinates.

bounds = reader.readtext(np.array(image), min_size=0, slope_ths=0.2, ycenter_ths=0.6, height_ths=0.6, width_ths=0.7,decoder='beamsearch', beamWidth=10)
#bounds
#The output shows 4 bounding box coordinates(x,y) of the text along with the identified text and confidence score.

#@title Run to draw boundary box around the text to be extracted.

def draw_boxes(img, bounds, color='blue', width=2):
  draw = ImageDraw.Draw(img)
  for b in bounds:
    p0, p1, p2, p3 = b[0]
    draw.line([*p0, *p1, *p2, *p3, *p0], fill=color, width=width)
  return img

pic = draw_boxes(image, bounds)
pic=pic.resize((700,900))
pic

#@title Run to display the text extracted from the magazine page.

bound = reader.readtext(np.array(images[page]), detail=0)
print("The text extracted from the magazine is :")
n=1
for b in bound:
  print(str(n)+" - " +b)
  n=n+1